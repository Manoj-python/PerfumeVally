# Generated by Django 5.0.2 on 2025-08-12 14:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='admin_profile/')),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='banners/')),
                ('section', models.CharField(blank=True, choices=[('new-arrival', 'New Arrival'), ('trending', 'Trending'), ('best-seller', 'Best Seller'), ('shopbyocassions', 'Shop By Occasions')], max_length=20, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Category Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='category_banners/')),
                ('gif_file', models.FileField(blank=True, null=True, upload_to='gifs/')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('required_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Flavour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='flavours/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled'), ('Completed', 'Completed'), ('order_created', 'Order Created'), ('awb_assigned', 'AWB Assigned'), ('pickup_generated', 'Pickup Generated'), ('manifest_ready', 'Manifest Ready'), ('label_ready', 'Label Ready'), ('invoice_ready', 'Invoice Ready')], default='Pending', max_length=50)),
                ('shiprocket_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('shiprocket_shipment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('shiprocket_tracking_info', models.JSONField(blank=True, null=True)),
                ('shiprocket_awb_code', models.CharField(blank=True, max_length=100, null=True)),
                ('shiprocket_courier_name', models.CharField(blank=True, max_length=100, null=True)),
                ('shiprocket_courier_id', models.CharField(blank=True, max_length=100, null=True)),
                ('label_url', models.URLField(blank=True, null=True)),
                ('invoice_url', models.URLField(blank=True, null=True)),
                ('manifest_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('shiprocket_tracking_status', models.CharField(blank=True, max_length=100, null=True)),
                ('shiprocket_estimated_delivery', models.CharField(blank=True, max_length=100, null=True)),
                ('shiprocket_tracking_events', models.JSONField(blank=True, null=True)),
                ('shiprocket_tracking_status_updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gift_wrap', models.BooleanField(default=False)),
                ('selected_flavours', models.CharField(blank=True, max_length=255, null=True)),
                ('offer_code', models.CharField(blank=True, max_length=30, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('Credit Card', 'Credit Card'), ('PayPal', 'PayPal'), ('Razorpay', 'Razorpay'), ('COD', 'Cash On Delivery')], max_length=50)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Failed', 'Failed')], max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PremiumFestiveOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('premium_festival', models.CharField(choices=[('Welcome', 'Welcome'), ('Premium', 'Premium'), ('Festival', 'Festival')], max_length=20)),
                ('offer_name', models.CharField(blank=True, max_length=50, null=True)),
                ('size', models.CharField(blank=True, max_length=10, null=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Enter discount percentage (0-100%)', max_digits=5, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PremiumOfferUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_code', models.CharField(max_length=50)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Product Name')),
                ('description', models.TextField()),
                ('original_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image1', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('glass_image', models.ImageField(blank=True, null=True, upload_to='glass_images/')),
                ('plastic_image', models.ImageField(blank=True, null=True, upload_to='plastic_images/')),
                ('is_trending', models.BooleanField(default=False)),
                ('is_new_arrival', models.BooleanField(default=False)),
                ('is_best_seller', models.BooleanField(default=False)),
                ('is_shop_by_occassion', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delivery_charges', models.PositiveIntegerField(default=0)),
                ('platform_fee', models.PositiveIntegerField(default=0)),
                ('scroll_bar', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('stock_status', models.CharField(choices=[('In Stock', 'In Stock'), ('Out of Stock', 'Out of Stock')], default='In Stock', max_length=20)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bottle_type', models.CharField(blank=True, choices=[('Plastic_Bottle', 'Plastic Bottle'), ('Glass_Bottle', 'Glass Bottle')], max_length=100, null=True)),
                ('size', models.CharField(blank=True, max_length=20, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('offer_code', models.CharField(blank=True, max_length=20, null=True)),
                ('offer_start_time', models.DateTimeField(blank=True, null=True)),
                ('offer_end_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='product_videos/')),
                ('title', models.CharField(max_length=255, verbose_name='Video Title')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PushSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.TextField()),
                ('keys', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField()),
                ('rating', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(blank=True, max_length=255, null=True)),
                ('carrier', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Processing', 'Processing'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered')], default='Processing', max_length=50)),
                ('estimated_delivery', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShiprocketToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Subcategory Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sub_image', models.ImageField(blank=True, null=True, upload_to='subcategory_images/')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='subcategory_banners/')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CouponUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GiftSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_name', models.CharField(max_length=50)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('offer_code', models.CharField(blank=True, max_length=20, null=True)),
                ('offer_start_time', models.DateTimeField(blank=True, null=True)),
                ('offer_end_time', models.DateTimeField(blank=True, null=True)),
                ('flavours', models.ManyToManyField(related_name='gift', to='admin_panel.flavour')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_sent', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
